# lifecycle mapping
lifecycle.DESIGN=in Design
lifecycle.DEVELOPMENT=in Entwicklung
lifecycle.TEST=in Test
lifecycle.RELEASED=in Freigabe
lifecycle.PRODUCTION=in Produktion
lifecycle.DEPRECATED=Abgelaufen
lifecycle.END_OF_LIFE=Stillgelegt
# Schnittstellensichtbarkeit
interfaceType.internal=intern
interfaceType.external=extern
# Hostprogram-Typ
hostprogramAccessType.online=Online
hostprogramAccessType.batch=Batch
hostprogramAccessType.onlinebatch=Online/Batch
hostprogramAccessType.unknown=Unbekannt
# Anwendung Domaene EAMP001
EAMP001.0=DWH
EAMP001.1=Finanzierung
EAMP001.2=ORG/IT
EAMP001.3=RiskMgm, Contr, ReWe
EAMP001.4=Veranlagung
EAMP001.5=Vertrieb
EAMP001.6=ZV/Konto/Karte
# Module Tier EAMP004
EAMP004.0=Client-Tier
EAMP004.1=Web-Tier
EAMP004.2=Service-Tier
EAMP004.3=Host-Tier
# Person Organisation
organisation.racon=RACON
organisation.rso=RSO
organisation.grz=GRZ
# Person Verantwortlichkeit
responsibility.fachlich=fachlich
responsibility.technisch=technisch
# artefact typen EAMP002
EAMP002.0=Client-API
EAMP002.1=Client-Component
EAMP002.2=Web-Component
EAMP002.3=Web-Service
EAMP002.4=Host-Traco
EAMP002.5=Host-Programm
EAMP002.6=Tabelle
# artefact typen registry keys zu EAMP002!
200PMAE.hostprogram=5
200PMAE.table=6
200PMAE.hosttraco=4
200PMAE.webcomponent=2
200PMAE.clientcomponent=1
200PMAE.clientapi=0
200PMAE.webservice=3
# EAMP003 -> service role 
EAMP003.0=Aufrufende Anwendung
EAMP003.1=Aufgerufende Anwendung
# hostprogram technologie
hostprogramtech.cobol=COBOL
hostprogramtech.pli=PL/I
hostprogramtech.assembler=Assembler
hostprogramtech.copybook=Copybook
hostprogramtech.procedure=Procedure
# hosttraco daten format
hosttracodataformat.as3=AS3
hosttracodataformat.bema=BEMA

